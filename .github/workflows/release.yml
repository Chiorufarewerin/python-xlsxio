name: release

on:
  push:
    tags:
      - v*

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      max-parallel: 8
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        architecture:
          - x86
          - x64

    steps:
      - uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Download Build Tools for Visual Studio 2019
        run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe

      - name: Run vs_buildtools.exe install
        run: >-
          ./vs_buildtools.exe --quiet --wait --norestart --nocache
          --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64
          --add Microsoft.VisualStudio.Component.VC.v141.x86.x64
          --add Microsoft.VisualStudio.Component.VC.140
          --includeRecommended

      - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install Python package dependencies
        run: pip install -r requirements.txt

      # - name: Build binary wheel
      #   run: python setup.py bdist_wheel

      # - name: Install package
      #   working-directory: dist
      #   run: pip install (Get-ChildItem | Select-Object -First 1).Name

      # - name: Remove xlsxio
      #   run: Remove-Item xlsxio -Recurse -Force

      # - name: Run tests
      #   run: python -m pytest

      # - name: Archive dist artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: dist-windows-${{ matrix.python-version }}-${{ matrix.architecture }}
      #     path: dist

      - name: Build debug ext
        run: python setup.py build_ext --inplace --debug

      - name: Run tests
        run: python -m pytest

  build-linux:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux2014_x86_64
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - cp36-cp36m
          - cp37-cp37m
          - cp38-cp38
          - cp39-cp39

    steps:
      - uses: actions/checkout@master

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Install Python package dependencies
        run: /opt/python/${{ matrix.python-version }}/bin/python -m pip install -r requirements.txt

      - name: Build binary wheel
        run: /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel

      - name: Apply auditwheel
        run: auditwheel repair -w dist dist/*

      - name: Remove linux wheel
        run: rm dist/*-linux_x86_64.whl

      - name: Install package
        run: /opt/python/${{ matrix.python-version }}/bin/python -m pip install dist/*

      - name: Remove xlsxio
        run: rm -rf xlsxio

      - name: Run tests
        run: /opt/python/${{ matrix.python-version }}/bin/python -m pytest

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-linux-${{ matrix.python-version }}
          path: dist

  build-mac:
    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9

    steps:
      - uses: actions/checkout@master

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Set up Python ${{ matrix.python-version }} x64
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Python package dependencies
        run: pip install -r requirements.txt

      - name: Build binary wheel
        run: python setup.py bdist_wheel

      - name: Install package
        run: pip install dist/*

      - name: Remove xlsxio
        run: rm -rf xlsxio

      - name: Run tests
        run: python -m pytest

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-macos-${{ matrix.python-version }}
          path: dist

  upload:
    needs:
      - build-windows
      - build-linux
      - build-mac
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create source dist
        run: python setup.py sdist

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Move artifacts to dist
        run: for dir in artifacts/*; do [ -d "$dir" ] && mv "$dir"/* dist/; done

      - name: Upload with twine
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          ls -l dist/*
          pip install twine
          twine upload dist/*
